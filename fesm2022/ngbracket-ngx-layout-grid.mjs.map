{"version":3,"file":"ngbracket-ngx-layout-grid.mjs","sources":["../../../../projects/libs/flex-layout/grid/align-columns/align-columns.ts","../../../../projects/libs/flex-layout/grid/align-rows/align-rows.ts","../../../../projects/libs/flex-layout/grid/area/area.ts","../../../../projects/libs/flex-layout/grid/areas/areas.ts","../../../../projects/libs/flex-layout/grid/auto/auto.ts","../../../../projects/libs/flex-layout/grid/column/column.ts","../../../../projects/libs/flex-layout/grid/columns/columns.ts","../../../../projects/libs/flex-layout/grid/gap/gap.ts","../../../../projects/libs/flex-layout/grid/grid-align/grid-align.ts","../../../../projects/libs/flex-layout/grid/row/row.ts","../../../../projects/libs/flex-layout/grid/rows/rows.ts","../../../../projects/libs/flex-layout/grid/module.ts","../../../../projects/libs/flex-layout/grid/ngbracket-ngx-layout-grid.ts"],"sourcesContent":["import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, Injectable, Input } from '@angular/core';\nimport {\n  BaseDirective2,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@ngbracket/ngx-layout/core';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs',\n  'gdAlignColumns.sm',\n  'gdAlignColumns.md',\n  'gdAlignColumns.lg',\n  'gdAlignColumns.xl',\n  'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md',\n  'gdAlignColumns.lt-lg',\n  'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs',\n  'gdAlignColumns.gt-sm',\n  'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg',\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n@Directive({ inputs, selector })\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n  protected override DIRECTIVE_KEY = 'grid-align-columns';\n  protected override inputs = inputs;\n\n  @Input('gdInline')\n  get inline(): boolean {\n    return this._inline;\n  }\n  set inline(val: boolean) {\n    this._inline = coerceBooleanProperty(val);\n  }\n  protected _inline = false;\n\n  constructor(\n    elementRef: ElementRef,\n    styleBuilder: GridAlignColumnsStyleBuilder,\n    styler: StyleUtils,\n    marshal: MediaMarshaller\n  ) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected override updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, { inline: this.inline });\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n/**\n * @deprecated The DefaultGridAlignColumnsDirective will be removed in version 21.\n * Use GridAlignColumnsDirective directly instead.\n */\n@Directive({ selector, inputs })\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected override inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: { [key: string]: string } = {},\n    [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default: // default main axis\n      css['align-content'] = DEFAULT_MAIN;\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default: // 'stretch'\n      // default cross axis\n      css['align-items'] = DEFAULT_CROSS;\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, Injectable, Input } from '@angular/core';\nimport {\n  BaseDirective2,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@ngbracket/ngx-layout/core';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs',\n  'gdAlignRows.sm',\n  'gdAlignRows.md',\n  'gdAlignRows.lg',\n  'gdAlignRows.xl',\n  'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md',\n  'gdAlignRows.lt-lg',\n  'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs',\n  'gdAlignRows.gt-sm',\n  'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg',\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n@Directive({ selector, inputs })\nexport class GridAlignRowsDirective extends BaseDirective2 {\n  protected override DIRECTIVE_KEY = 'grid-align-rows';\n  protected override inputs = inputs;\n\n  @Input('gdInline')\n  get inline(): boolean {\n    return this._inline;\n  }\n  set inline(val: boolean) {\n    this._inline = coerceBooleanProperty(val);\n  }\n  protected _inline = false;\n\n  constructor(\n    elementRef: ElementRef,\n    styleBuilder: GridAlignRowsStyleBuilder,\n    styler: StyleUtils,\n    marshal: MediaMarshaller\n  ) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected override updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, { inline: this.inline });\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n/**\n * @deprecated The DefaultGridAlignRowsDirective will be removed in version 21.\n * Use GridAlignRowsDirective directly instead.\n */\n@Directive({ selector, inputs })\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected override inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: { [key: string]: string } = {},\n    [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default: // default main axis\n      css['justify-content'] = DEFAULT_MAIN;\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default: // 'stretch'\n      // default cross axis\n      css['justify-items'] = DEFAULT_CROSS;\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","import { Directive, ElementRef, Injectable } from '@angular/core';\nimport {\n  BaseDirective2,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@ngbracket/ngx-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({ providedIn: 'root' })\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return { 'grid-area': input || DEFAULT_VALUE };\n  }\n}\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs',\n  'gdArea.sm',\n  'gdArea.md',\n  'gdArea.lg',\n  'gdArea.xl',\n  'gdArea.lt-sm',\n  'gdArea.lt-md',\n  'gdArea.lt-lg',\n  'gdArea.lt-xl',\n  'gdArea.gt-xs',\n  'gdArea.gt-sm',\n  'gdArea.gt-md',\n  'gdArea.gt-lg',\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n@Directive({ selector, inputs })\nexport class GridAreaDirective extends BaseDirective2 {\n  protected override DIRECTIVE_KEY = 'grid-area';\n  protected override inputs = inputs;\n\n  constructor(\n    elRef: ElementRef,\n    styleUtils: StyleUtils,\n    styleBuilder: GridAreaStyleBuilder,\n    marshal: MediaMarshaller\n  ) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected override styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n/**\n * @deprecated The DefaultGridAreaDirective will be removed in version 21.\n * Use GridAreaDirective directly instead.\n */\n@Directive({ selector, inputs })\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected override inputs = inputs;\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, Injectable, Input } from '@angular/core';\nimport {\n  BaseDirective2,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@ngbracket/ngx-layout/core';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE)\n      .split(DELIMETER)\n      .map((v) => `\"${v.trim()}\"`);\n\n    return {\n      display: parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' '),\n    };\n  }\n}\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs',\n  'gdAreas.sm',\n  'gdAreas.md',\n  'gdAreas.lg',\n  'gdAreas.xl',\n  'gdAreas.lt-sm',\n  'gdAreas.lt-md',\n  'gdAreas.lt-lg',\n  'gdAreas.lt-xl',\n  'gdAreas.gt-xs',\n  'gdAreas.gt-sm',\n  'gdAreas.gt-md',\n  'gdAreas.gt-lg',\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n@Directive({ selector, inputs })\nexport class GridAreasDirective extends BaseDirective2 {\n  protected override DIRECTIVE_KEY = 'grid-areas';\n  protected override inputs = inputs;\n\n  @Input('gdInline')\n  get inline(): boolean {\n    return this._inline;\n  }\n  set inline(val: boolean) {\n    this._inline = coerceBooleanProperty(val);\n  }\n  protected _inline = false;\n\n  constructor(\n    elRef: ElementRef,\n    styleUtils: StyleUtils,\n    styleBuilder: GridAreasStyleBuiler,\n    marshal: MediaMarshaller\n  ) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected override updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, { inline: this.inline });\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n/**\n * @deprecated The DefaultGridAreasDirective will be removed in version 21.\n * Use GridAreasDirective directly instead.\n */\n@Directive({ selector, inputs })\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected override inputs = inputs;\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, Injectable, Input } from '@angular/core';\nimport {\n  BaseDirective2,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@ngbracket/ngx-layout/core';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (\n      direction !== 'column' &&\n      direction !== 'row' &&\n      direction !== 'dense'\n    ) {\n      direction = 'row';\n    }\n\n    dense = dense === 'dense' && direction !== 'dense' ? ' dense' : '';\n\n    return {\n      display: parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense,\n    };\n  }\n}\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs',\n  'gdAuto.sm',\n  'gdAuto.md',\n  'gdAuto.lg',\n  'gdAuto.xl',\n  'gdAuto.lt-sm',\n  'gdAuto.lt-md',\n  'gdAuto.lt-lg',\n  'gdAuto.lt-xl',\n  'gdAuto.gt-xs',\n  'gdAuto.gt-sm',\n  'gdAuto.gt-md',\n  'gdAuto.gt-lg',\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n@Directive({ selector, inputs })\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean {\n    return this._inline;\n  }\n  set inline(val: boolean) {\n    this._inline = coerceBooleanProperty(val);\n  }\n  protected _inline = false;\n\n  protected override DIRECTIVE_KEY = 'grid-auto';\n  protected override inputs = inputs;\n\n  constructor(\n    elementRef: ElementRef,\n    styleBuilder: GridAutoStyleBuilder,\n    styler: StyleUtils,\n    marshal: MediaMarshaller\n  ) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected override updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, { inline: this.inline });\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n/**\n * @deprecated The DefaultGridAutoDirective will be removed in version 21.\n * Use GridAutoDirective directly instead.\n */\n@Directive({ selector, inputs })\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected override inputs = inputs;\n}\n","import { Directive, ElementRef, Injectable } from '@angular/core';\nimport {\n  BaseDirective2,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@ngbracket/ngx-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({ providedIn: 'root' })\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return { 'grid-column': input || DEFAULT_VALUE };\n  }\n}\n\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs',\n  'gdColumn.sm',\n  'gdColumn.md',\n  'gdColumn.lg',\n  'gdColumn.xl',\n  'gdColumn.lt-sm',\n  'gdColumn.lt-md',\n  'gdColumn.lt-lg',\n  'gdColumn.lt-xl',\n  'gdColumn.gt-xs',\n  'gdColumn.gt-sm',\n  'gdColumn.gt-md',\n  'gdColumn.gt-lg',\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n\n@Directive({ selector, inputs })\nexport class GridColumnDirective extends BaseDirective2 {\n  protected override DIRECTIVE_KEY = 'grid-column';\n  protected override inputs = inputs;\n\n  constructor(\n    elementRef: ElementRef,\n    styleBuilder: GridColumnStyleBuilder,\n    styler: StyleUtils,\n    marshal: MediaMarshaller\n  ) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected override styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n/**\n * @deprecated The DefaultGridColumnDirective will be removed in version 21.\n * Use GridColumnDirective directly instead.\n */\n@Directive({ selector, inputs })\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected override inputs = inputs;\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, Injectable, Input } from '@angular/core';\nimport {\n  BaseDirective2,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@ngbracket/ngx-layout/core';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      display: parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = auto ? 'grid-auto-columns' : 'grid-template-columns';\n    css[key] = input;\n\n    return css;\n  }\n}\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs',\n  'gdColumns.sm',\n  'gdColumns.md',\n  'gdColumns.lg',\n  'gdColumns.xl',\n  'gdColumns.lt-sm',\n  'gdColumns.lt-md',\n  'gdColumns.lt-lg',\n  'gdColumns.lt-xl',\n  'gdColumns.gt-xs',\n  'gdColumns.gt-sm',\n  'gdColumns.gt-md',\n  'gdColumns.gt-lg',\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n@Directive({ selector, inputs })\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected override DIRECTIVE_KEY = 'grid-columns';\n  protected override inputs = inputs;\n  \n  @Input('gdInline')\n  get inline(): boolean {\n    return this._inline;\n  }\n  set inline(val: boolean) {\n    this._inline = coerceBooleanProperty(val);\n  }\n  protected _inline = false;\n\n  constructor(\n    elementRef: ElementRef,\n    styleBuilder: GridColumnsStyleBuilder,\n    styler: StyleUtils,\n    marshal: MediaMarshaller\n  ) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected override updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, { inline: this.inline });\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n/**\n * @deprecated The DefaultGridColumnsDirective will be removed in version 21.\n * Use GridColumnsDirective directly instead.\n */\n@Directive({ selector, inputs })\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected override inputs = inputs;\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, Injectable, Input } from '@angular/core';\nimport {\n  BaseDirective2,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@ngbracket/ngx-layout/core';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      display: parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE,\n    };\n  }\n}\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs',\n  'gdGap.sm',\n  'gdGap.md',\n  'gdGap.lg',\n  'gdGap.xl',\n  'gdGap.lt-sm',\n  'gdGap.lt-md',\n  'gdGap.lt-lg',\n  'gdGap.lt-xl',\n  'gdGap.gt-xs',\n  'gdGap.gt-sm',\n  'gdGap.gt-md',\n  'gdGap.gt-lg',\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n@Directive({ selector, inputs })\nexport class GridGapDirective extends BaseDirective2 {\n  protected override DIRECTIVE_KEY = 'grid-gap';\n  protected override inputs = inputs;\n\n  @Input('gdInline')\n  get inline(): boolean {\n    return this._inline;\n  }\n  set inline(val: boolean) {\n    this._inline = coerceBooleanProperty(val);\n  }\n  protected _inline = false;\n\n  constructor(\n    elRef: ElementRef,\n    styleUtils: StyleUtils,\n    styleBuilder: GridGapStyleBuilder,\n    marshal: MediaMarshaller\n  ) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected override updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, { inline: this.inline });\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n/**\n * @deprecated The DefaultGridGapDirective will be removed in version 21.\n * Use GridGapDirective directly instead.\n */\n@Directive({ selector, inputs })\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected override inputs = inputs;\n}\n","import { Directive, ElementRef, Injectable } from '@angular/core';\nimport {\n  BaseDirective2,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@ngbracket/ngx-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({ providedIn: 'root' })\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs',\n  'gdGridAlign.sm',\n  'gdGridAlign.md',\n  'gdGridAlign.lg',\n  'gdGridAlign.xl',\n  'gdGridAlign.lt-sm',\n  'gdGridAlign.lt-md',\n  'gdGridAlign.lt-lg',\n  'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs',\n  'gdGridAlign.gt-sm',\n  'gdGridAlign.gt-md',\n  'gdGridAlign.gt-lg',\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n@Directive({ selector, inputs })\nexport class GridAlignDirective extends BaseDirective2 {\n  protected override DIRECTIVE_KEY = 'grid-align';\n  protected override inputs = inputs;\n\n  constructor(\n    elementRef: ElementRef,\n    styleBuilder: GridAlignStyleBuilder,\n    styler: StyleUtils,\n    marshal: MediaMarshaller\n  ) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected override styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n/**\n * @deprecated The DefaultGridAlignDirective will be removed in version 21.\n * Use GridAlignDirective directly instead.\n */\n@Directive({ selector, inputs })\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected override inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: { [key: string]: string } = {},\n    [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default: // default row axis\n      css['justify-self'] = ROW_DEFAULT;\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default: // default column axis\n      css['align-self'] = COL_DEFAULT;\n      break;\n  }\n\n  return css;\n}\n","import { Directive, ElementRef, Injectable } from '@angular/core';\nimport {\n  BaseDirective2,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@ngbracket/ngx-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({ providedIn: 'root' })\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return { 'grid-row': input || DEFAULT_VALUE };\n  }\n}\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs',\n  'gdRow.sm',\n  'gdRow.md',\n  'gdRow.lg',\n  'gdRow.xl',\n  'gdRow.lt-sm',\n  'gdRow.lt-md',\n  'gdRow.lt-lg',\n  'gdRow.lt-xl',\n  'gdRow.gt-xs',\n  'gdRow.gt-sm',\n  'gdRow.gt-md',\n  'gdRow.gt-lg',\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n@Directive({ selector, inputs })\nexport class GridRowDirective extends BaseDirective2 {\n  protected override DIRECTIVE_KEY = 'grid-row';\n  protected override inputs = inputs;\n\n  constructor(\n    elementRef: ElementRef,\n    styleBuilder: GridRowStyleBuilder,\n    styler: StyleUtils,\n    marshal: MediaMarshaller\n  ) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected override styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n/**\n * @deprecated The DefaultGridRowDirective will be removed in version 21.\n * Use GridRowDirective directly instead.\n */\n@Directive({ selector, inputs })\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected override inputs = inputs;\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, Injectable, Input } from '@angular/core';\nimport {\n  BaseDirective2,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@ngbracket/ngx-layout/core';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      display: parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = auto ? 'grid-auto-rows' : 'grid-template-rows';\n    css[key] = input;\n\n    return css;\n  }\n}\n\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs',\n  'gdRows.sm',\n  'gdRows.md',\n  'gdRows.lg',\n  'gdRows.xl',\n  'gdRows.lt-sm',\n  'gdRows.lt-md',\n  'gdRows.lt-lg',\n  'gdRows.lt-xl',\n  'gdRows.gt-xs',\n  'gdRows.gt-sm',\n  'gdRows.gt-md',\n  'gdRows.gt-lg',\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n@Directive({ selector, inputs })\nexport class GridRowsDirective extends BaseDirective2 {\n  protected override DIRECTIVE_KEY = 'grid-rows';\n  protected override inputs = inputs;\n\n  @Input('gdInline')\n  get inline(): boolean {\n    return this._inline;\n  }\n  set inline(val: boolean) {\n    this._inline = coerceBooleanProperty(val);\n  }\n  protected _inline = false;\n\n  constructor(\n    elementRef: ElementRef,\n    styleBuilder: GridRowsStyleBuilder,\n    styler: StyleUtils,\n    marshal: MediaMarshaller\n  ) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected override updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, { inline: this.inline });\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n/**\n * @deprecated The DefaultGridRowsDirective will be removed in version 21.\n * Use GridRowsDirective directly instead.\n */\n@Directive({ selector, inputs })\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected override inputs = inputs;\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule } from '@ngbracket/ngx-layout/core';\n\nimport { DefaultGridAlignColumnsDirective } from './align-columns/align-columns';\nimport { DefaultGridAlignRowsDirective } from './align-rows/align-rows';\nimport { DefaultGridAreaDirective } from './area/area';\nimport { DefaultGridAreasDirective } from './areas/areas';\nimport { DefaultGridAutoDirective } from './auto/auto';\nimport { DefaultGridColumnDirective } from './column/column';\nimport { DefaultGridColumnsDirective } from './columns/columns';\nimport { DefaultGridGapDirective } from './gap/gap';\nimport { DefaultGridAlignDirective } from './grid-align/grid-align';\nimport { DefaultGridRowDirective } from './row/row';\nimport { DefaultGridRowsDirective } from './rows/rows';\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, ...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES],\n})\nexport class GridModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["DEFAULT_MAIN","DEFAULT_CROSS","buildCss","inputs","selector","DEFAULT_VALUE","AUTO_SPECIFIER"],"mappings":"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"}